<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>huizhou92</title>
  <icon>https://hxzhouh.com/icon.png</icon>
  
  <link href="https://hxzhouh.com/atom.xml" rel="self"/>
  
  <link href="https://hxzhouh.com/"/>
  <updated>2024-05-10T01:31:02.493Z</updated>
  <id>https://hxzhouh.com/</id>
  
  <author>
    <name>huizhou92</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>11 Tips for Detecting and Responding to Intrusions on Linux</title>
    <link href="https://hxzhouh.com/2024/05/10/11%20Tips%20for%20Detecting%20and%20Responding%20to%20Intrusions%20on%20Linux/"/>
    <id>https://hxzhouh.com/2024/05/10/11%20Tips%20for%20Detecting%20and%20Responding%20to%20Intrusions%20on%20Linux/</id>
    <published>2024-05-10T01:31:00.000Z</published>
    <updated>2024-05-10T01:31:02.493Z</updated>
    
    
    <summary type="html">&lt;p&gt;![[Pasted image 20240510093043.png]]&lt;br&gt;With the increasing popularity of open-source products, it is crucial for a backend engineer to be able to clearly identify whether an abnormal machine has been compromised. Based on my personal work experience, I have compiled several common scenarios of machines being hacked for reference.&lt;/p&gt;</summary>
    
    
    
    <category term="linux" scheme="https://hxzhouh.com/categories/linux/"/>
    
    
    <category term="linux" scheme="https://hxzhouh.com/tags/linux/"/>
    
    <category term="security" scheme="https://hxzhouh.com/tags/security/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://hxzhouh.com/2024/05/08/%E6%9C%AA%E5%91%BD%E5%90%8D/"/>
    <id>https://hxzhouh.com/2024/05/08/%E6%9C%AA%E5%91%BD%E5%90%8D/</id>
    <published>2024-05-08T09:31:35.461Z</published>
    <updated>2024-05-09T02:30:03.174Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;Title-8-Common-SQL-Slow-Query-Statements-and-How-to-Optimize-Them&quot;&gt;&lt;a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://hxzhouh.com/2024/05/08/8%20Ways%20to%20Sql%20That%20Can%20Decrease%20Performance%20by%20100%20Times./"/>
    <id>https://hxzhouh.com/2024/05/08/8%20Ways%20to%20Sql%20That%20Can%20Decrease%20Performance%20by%20100%20Times./</id>
    <published>2024-05-08T08:02:28.765Z</published>
    <updated>2024-05-08T09:24:24.556Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;得益于摩尔定律，计算机性能大幅提升，以及数据库本身的进步还有微服务提倡的各种数据库反模式设计，我们现在写复杂的SQL的机会越来越少了，所以业界（没错就是Google）开始提倡不再专门优化SQL，因为节约的资源抵不上员工的工资。但是作为一个工程师，我们应该要对自己的技术精益求</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>谷歌如何写设计文档</title>
    <link href="https://hxzhouh.com/2024/05/08/%E8%B0%B7%E6%AD%8C%E5%A6%82%E4%BD%95%E5%86%99%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3/"/>
    <id>https://hxzhouh.com/2024/05/08/%E8%B0%B7%E6%AD%8C%E5%A6%82%E4%BD%95%E5%86%99%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3/</id>
    <published>2024-05-08T01:51:00.000Z</published>
    <updated>2024-05-08T08:02:28.922Z</updated>
    
    
    <summary type="html">&lt;p&gt;原文连接:  &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/&quot;&gt;https://www.industrialempathy.com/posts/design-docs-at-google/&lt;/a&gt;&lt;br&gt;Google 软件工程文化的关键要素之一是使用设计文档来定义软件设计。这些是软件系统或应用程序的主要作者在开始编码项目之前创建的相对非正式的文档。设计文档记录了高层实施策略和关键设计决策，重点是在这些决策过程中考虑的权衡。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://hxzhouh.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="工程" scheme="https://hxzhouh.com/tags/%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>DISCORD 如何将工程转移到云开发环境</title>
    <link href="https://hxzhouh.com/2024/05/06/DISCORD%20%E5%A6%82%E4%BD%95%E5%B0%86%E5%B7%A5%E7%A8%8B%E8%BD%AC%E7%A7%BB%E5%88%B0%E4%BA%91%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>https://hxzhouh.com/2024/05/06/DISCORD%20%E5%A6%82%E4%BD%95%E5%B0%86%E5%B7%A5%E7%A8%8B%E8%BD%AC%E7%A7%BB%E5%88%B0%E4%BA%91%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</id>
    <published>2024-05-06T15:11:00.000Z</published>
    <updated>2024-05-06T15:49:52.486Z</updated>
    
    
    <summary type="html">&lt;p&gt;原文链接：&lt;a href=&quot;https://discord.com/blog/how-discord-moved-engineering-to-cloud-development-environments&quot;&gt;https://discord.com/blog/how-discord-moved-engineering-to-cloud-development-environments&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;&lt;strong&gt;介绍&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;如果您一直关注我们之前的&lt;a href=&quot;https://discord.com/blogs?engineering&quot;&gt;工程博客文章&lt;/a&gt;，您会知道，构建和维护Discord是一项复杂的任务。我们的软件开发在一个多语言的单一代码库中进行，其中Python、Typescript、Rust、Elixir和C&amp;#x2F;C++是最活跃的开发语言。我们还为包括Android、iOS、MacOS、Windows和Linux在内的所有主要平台开发和发布产品。&lt;/p&gt;
&lt;p&gt;内部开发者体验团队负责软件开发生命周期的大约前三分之一。我们的主要任务包括构建和维护IDE体验、管理开发环境、提供构建、开发和测试代码的工具、扩展和维护CI基础设施，以及拥有变更管理流程和支持工具基础设施。虽然我们可以深入探讨这些主题中的任何一个，但本博客文章重点介绍了我们如何在&lt;a href=&quot;https://coder.com/&quot;&gt;Coder&lt;/a&gt;团队的帮助下，将所有后端和基础设施开发过渡到基于Linux的云开发环境。  &lt;/p&gt;</summary>
    
    
    
    <category term="blog" scheme="https://hxzhouh.com/categories/blog/"/>
    
    
    <category term="工程" scheme="https://hxzhouh.com/tags/%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Mac: Slowing Down Your Disk Speed by 60x</title>
    <link href="https://hxzhouh.com/2024/04/27/Slowing%20Down%20Your%20Disk%20Speed%20by%2060x/"/>
    <id>https://hxzhouh.com/2024/04/27/Slowing%20Down%20Your%20Disk%20Speed%20by%2060x/</id>
    <published>2024-04-27T14:21:00.000Z</published>
    <updated>2024-04-27T14:21:47.968Z</updated>
    
    
    <summary type="html">&lt;p&gt;Sometimes in the development process, we need to simulate slow disk conditions to verify if our code can still function on low-performance machines. Typically, we would use &lt;code&gt;cgroup&lt;/code&gt; or Docker for this purpose, but it can be cumbersome on a MacBook. However, there’s a built-in tool on macOS that can help us achieve this: &lt;code&gt;dmc&lt;/code&gt;.&lt;/p&gt;</summary>
    
    
    
    <category term="blog" scheme="https://hxzhouh.com/categories/blog/"/>
    
    
    <category term="tools" scheme="https://hxzhouh.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>Mac:  如何将你的硬盘读写速度降低 60倍</title>
    <link href="https://hxzhouh.com/2024/04/26/%E5%A6%82%E4%BD%95%E5%B0%86%E4%BD%A0%E7%9A%84%E7%A1%AC%E7%9B%98%E8%AF%BB%E5%86%99%E9%80%9F%E5%BA%A6%E9%99%8D%E4%BD%8E%2060%E5%80%8D/"/>
    <id>https://hxzhouh.com/2024/04/26/%E5%A6%82%E4%BD%95%E5%B0%86%E4%BD%A0%E7%9A%84%E7%A1%AC%E7%9B%98%E8%AF%BB%E5%86%99%E9%80%9F%E5%BA%A6%E9%99%8D%E4%BD%8E%2060%E5%80%8D/</id>
    <published>2024-04-26T11:22:00.000Z</published>
    <updated>2024-05-07T02:15:58.614Z</updated>
    
    
    <summary type="html">使用DMC操作硬盘的读写速度</summary>
    
    
    
    <category term="工具" scheme="https://hxzhouh.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="mac" scheme="https://hxzhouh.com/tags/mac/"/>
    
    <category term="性能测试" scheme="https://hxzhouh.com/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Rust Lesson 1： A Gopher&#39;s View on Rust</title>
    <link href="https://hxzhouh.com/2024/04/26/Rust%20Lesson%201%20A%20Gopher&#39;s%20View%20on%20Rust/"/>
    <id>https://hxzhouh.com/2024/04/26/Rust%20Lesson%201%20A%20Gopher&#39;s%20View%20on%20Rust/</id>
    <published>2024-04-26T01:43:00.000Z</published>
    <updated>2024-04-26T01:44:17.176Z</updated>
    
    
    <summary type="html">Understand the history and current status of Rust, and why I want to learn Rust</summary>
    
    
    
    <category term="Go" scheme="https://hxzhouh.com/categories/Go/"/>
    
    
    <category term="go" scheme="https://hxzhouh.com/tags/go/"/>
    
    <category term="rust" scheme="https://hxzhouh.com/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>The Magical Algorithms Written by Two Old Men, Dominating the World!</title>
    <link href="https://hxzhouh.com/2024/04/25/The%20Magical%20Algorithms%20Written%20by%20Two%20Old%20Men,%20Dominating%20the%20World/"/>
    <id>https://hxzhouh.com/2024/04/25/The%20Magical%20Algorithms%20Written%20by%20Two%20Old%20Men,%20Dominating%20the%20World/</id>
    <published>2024-04-25T10:47:00.000Z</published>
    <updated>2024-04-25T10:49:32.879Z</updated>
    
    
    <summary type="html">The algorithm that changed the world</summary>
    
    
    
    <category term="compute" scheme="https://hxzhouh.com/categories/compute/"/>
    
    
    <category term="history" scheme="https://hxzhouh.com/tags/history/"/>
    
  </entry>
  
  <entry>
    <title>Go program pattern 05: Decorations</title>
    <link href="https://hxzhouh.com/2024/04/23/Go%20program%20pattern%2005%20Decorations/"/>
    <id>https://hxzhouh.com/2024/04/23/Go%20program%20pattern%2005%20Decorations/</id>
    <published>2024-04-23T06:33:00.000Z</published>
    <updated>2024-04-23T07:33:58.578Z</updated>
    
    
    <summary type="html">&lt;p&gt;Go is a statically typed compiled language designed to be concise and efficient. While Go is not a purely object-oriented language, we can still use design patterns to improve code readability and maintainability. Today, I will introduce a common design pattern: the Decorator pattern.&lt;/p&gt;</summary>
    
    
    
    <category term="Go" scheme="https://hxzhouh.com/categories/Go/"/>
    
    
    <category term="go" scheme="https://hxzhouh.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Go program pattern 03: Inversion of Control</title>
    <link href="https://hxzhouh.com/2024/04/23/Go%20program%20pattern%2003%EF%BC%9AInversion%20of%20Control/"/>
    <id>https://hxzhouh.com/2024/04/23/Go%20program%20pattern%2003%EF%BC%9AInversion%20of%20Control/</id>
    <published>2024-04-23T06:32:00.000Z</published>
    <updated>2024-04-23T07:33:51.330Z</updated>
    
    
    <summary type="html">&lt;p&gt;In the previous article, I briefly introduced the composite pattern in Go, which was explained in a simple manner. We understood that Go can achieve polymorphism in object-oriented programming through composition.&lt;/p&gt;</summary>
    
    
    
    <category term="Go" scheme="https://hxzhouh.com/categories/Go/"/>
    
    
    <category term="go" scheme="https://hxzhouh.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Go Program pattern 04: Map-Reduce</title>
    <link href="https://hxzhouh.com/2024/04/23/Go%20Program%20pattern%2004%EF%BC%9AMap-Reduce/"/>
    <id>https://hxzhouh.com/2024/04/23/Go%20Program%20pattern%2004%EF%BC%9AMap-Reduce/</id>
    <published>2024-04-23T06:32:00.000Z</published>
    <updated>2024-04-23T07:33:55.179Z</updated>
    
    
    <summary type="html">&lt;p&gt;Map-Reduce is a programming paradigm used for processing large-scale datasets. It helps simplify the process of parallel computation and improves computational efficiency.  &lt;/p&gt;</summary>
    
    
    
    <category term="Go" scheme="https://hxzhouh.com/categories/Go/"/>
    
    
  </entry>
  
  <entry>
    <title>Go program pattern 02: Implementing Class Inheritance and Method Overriding through Composition</title>
    <link href="https://hxzhouh.com/2024/04/23/Go%20program%20pattern%2002%EF%BC%9A%20Implementing%20Class%20Inheritance%20and%20Method%20Overriding%20through%20Composition/"/>
    <id>https://hxzhouh.com/2024/04/23/Go%20program%20pattern%2002%EF%BC%9A%20Implementing%20Class%20Inheritance%20and%20Method%20Overriding%20through%20Composition/</id>
    <published>2024-04-23T06:30:00.000Z</published>
    <updated>2024-04-23T07:42:25.772Z</updated>
    
    
    <summary type="html">&lt;p&gt;In the previous tutorial, I have already introduced that Go language, unlike object-oriented programming languages such as Java and PHP, does not support keywords like &lt;code&gt;class&lt;/code&gt; to define classes. Instead, it uses the &lt;code&gt;type&lt;/code&gt; keyword combined with basic types or structures to define the type system. Additionally, it does not support explicitly defining inheritance relationships between types using the &lt;code&gt;extends&lt;/code&gt; keyword.&lt;/p&gt;</summary>
    
    
    
    <category term="Go" scheme="https://hxzhouh.com/categories/Go/"/>
    
    
    <category term="go" scheme="https://hxzhouh.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Go program pattern 01: Functional Options Pattern</title>
    <link href="https://hxzhouh.com/2024/04/23/Go%20program%20pattern%2001%EF%BC%9A%20Functional%20Options%20Pattern/"/>
    <id>https://hxzhouh.com/2024/04/23/Go%20program%20pattern%2001%EF%BC%9A%20Functional%20Options%20Pattern/</id>
    <published>2024-04-23T06:29:00.000Z</published>
    <updated>2024-04-23T06:30:02.726Z</updated>
    
    
    <summary type="html">&lt;p&gt;Go is not a fully object-oriented language, and some object-oriented patterns are not well-suited for it. However, over the years, Go has developed its own set of patterns. Today, I would like to introduce a common pattern: the Functional Options Pattern.&lt;/p&gt;</summary>
    
    
    
    <category term="Go" scheme="https://hxzhouh.com/categories/Go/"/>
    
    
    <category term="go" scheme="https://hxzhouh.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Decryption go: understand go language pointer</title>
    <link href="https://hxzhouh.com/2024/04/23/Decryption%20go%EF%BC%9A%20understand%20go%20language%20pointer_%20english/"/>
    <id>https://hxzhouh.com/2024/04/23/Decryption%20go%EF%BC%9A%20understand%20go%20language%20pointer_%20english/</id>
    <published>2024-04-23T06:25:00.000Z</published>
    <updated>2024-04-23T06:25:48.688Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;This article is first published in the medium MPP plan. If you are a medium user, please follow me in &lt;a href=&quot;https://medium.hxzhouh.com/&quot;&gt;medium&lt;/a&gt;. Thank you very much.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Go language has three types of pointers. In the normal development process, we only encounter the ordinary pointer. However, in the low-level source code of Go language, there are a lot of operations involving three types of pointer conversion and manipulation. Let’s clarify these points first.&lt;/p&gt;</summary>
    
    
    
    <category term="Go" scheme="https://hxzhouh.com/categories/Go/"/>
    
    
    <category term="go" scheme="https://hxzhouh.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Learn How to Handle Time In Golang</title>
    <link href="https://hxzhouh.com/2024/04/19/Learn%20How%20to%20Handle%20Time%20In%20Golang/"/>
    <id>https://hxzhouh.com/2024/04/19/Learn%20How%20to%20Handle%20Time%20In%20Golang/</id>
    <published>2024-04-19T10:43:00.000Z</published>
    <updated>2024-04-19T10:58:30.587Z</updated>
    
    
    <summary type="html">introduce some important functions and methods in the time package</summary>
    
    
    
    <category term="Go" scheme="https://hxzhouh.com/categories/Go/"/>
    
    
    <category term="go" scheme="https://hxzhouh.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Go1.22 a new math  lib</title>
    <link href="https://hxzhouh.com/2024/04/18/Go1.22%20a%20new%20math%20%20lib/"/>
    <id>https://hxzhouh.com/2024/04/18/Go1.22%20a%20new%20math%20%20lib/</id>
    <published>2024-04-18T09:05:00.000Z</published>
    <updated>2024-04-18T09:05:07.022Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;This article is first published in the medium MPP plan. If you are a medium user, please follow me in &lt;a href=&quot;https://medium.hxzhouh.com/&quot;&gt;medium&lt;/a&gt;. Thank you very much.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Go1-22-a-new-math-lib&quot;&gt;&lt;a href=&quot;#Go1-22-a-new-math-lib&quot; class=&quot;headerlink&quot; title=&quot;Go1.22 a new math lib&quot;&gt;&lt;/a&gt;Go1.22 a new math lib&lt;/h1&gt;&lt;p&gt;The inaugural v2 version of the standard library in Go, hails from the esteemed &lt;a href=&quot;https://github.com/golang/go/discussions/60751&quot;&gt;math&amp;#x2F;rand&amp;#x2F;v2&lt;/a&gt; repository. It is set to make its grand debut with the official release of Go1.22, poised to serve as a reliable and production-ready resource.  &lt;/p&gt;</summary>
    
    
    
    <category term="go" scheme="https://hxzhouh.com/categories/go/"/>
    
    
    <category term="go" scheme="https://hxzhouh.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Go defer：makes the function simpler and more robust.</title>
    <link href="https://hxzhouh.com/2024/04/18/Go%20defer%EF%BC%9Amakes%20the%20function%20simpler%20and%20more%20robust./"/>
    <id>https://hxzhouh.com/2024/04/18/Go%20defer%EF%BC%9Amakes%20the%20function%20simpler%20and%20more%20robust./</id>
    <published>2024-04-18T09:02:00.000Z</published>
    <updated>2024-04-18T09:04:00.510Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;This article is first published in the medium MPP plan. If you are a medium user, please follow me in &lt;a href=&quot;https://medium.hxzhouh.com/&quot;&gt;medium&lt;/a&gt;. Thank you very much.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In the previous article, we used &lt;code&gt;defer&lt;/code&gt; to recover from panics. In the practical work of a gopher, &lt;code&gt;defer&lt;/code&gt; acts like a loyal and reliable teammate, silently helping us with the clean-up work behind the scenes. For example:&lt;/p&gt;</summary>
    
    
    
    <category term="go" scheme="https://hxzhouh.com/categories/go/"/>
    
    
    <category term="go" scheme="https://hxzhouh.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>How was my blog built</title>
    <link href="https://hxzhouh.com/2024/04/18/How%20was%20my%20blog%20built/"/>
    <id>https://hxzhouh.com/2024/04/18/How%20was%20my%20blog%20built/</id>
    <published>2024-04-18T03:19:00.000Z</published>
    <updated>2024-04-18T11:07:17.543Z</updated>
    
    
    <summary type="html">This article introduces how I use free services to build my own blog</summary>
    
    
    
    <category term="blog" scheme="https://hxzhouh.com/categories/blog/"/>
    
    
    <category term="hexo" scheme="https://hxzhouh.com/tags/hexo/"/>
    
    <category term="blog" scheme="https://hxzhouh.com/tags/blog/"/>
    
    <category term="tools" scheme="https://hxzhouh.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>我的博客是怎么搭建的</title>
    <link href="https://hxzhouh.com/2024/04/18/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%98%AF%E6%80%8E%E4%B9%88%E6%90%AD%E5%BB%BA%E7%9A%84/"/>
    <id>https://hxzhouh.com/2024/04/18/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%98%AF%E6%80%8E%E4%B9%88%E6%90%AD%E5%BB%BA%E7%9A%84/</id>
    <published>2024-04-18T03:19:00.000Z</published>
    <updated>2024-04-19T01:40:23.651Z</updated>
    
    
    <summary type="html">&lt;p&gt;博客， 是我的知识循环系统中的最后一环，也是最重要的一环，它承担我的输出，以及个人品牌。本篇文章，我介绍一下我的&lt;a href=&quot;https://hxzhouh.com/&quot;&gt;博客&lt;/a&gt;，是怎么搭建的。&lt;/p&gt;</summary>
    
    
    
    <category term="blog" scheme="https://hxzhouh.com/categories/blog/"/>
    
    
    <category term="hexo" scheme="https://hxzhouh.com/tags/hexo/"/>
    
    <category term="blog" scheme="https://hxzhouh.com/tags/blog/"/>
    
    <category term="tools" scheme="https://hxzhouh.com/tags/tools/"/>
    
  </entry>
  
</feed>
